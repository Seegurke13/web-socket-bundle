parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  Seegurke13\WebSocketBundle\:
    resource: '../..'
    exclude:
      - '../../DependencyInjection/'
      - '../../Entity/'
      - '../../Kernel.php'
      - '../../Tests/'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  Seegurke13\WebSocketBundle\Controller\:
    resource: '../../Controller/'
    tags: ['controller.service_arguments']

  Seegurke13\WebSocketBundle\Service\ActionStore:
    arguments:
      - '%kernel.cache_dir%/websocket/actions.php'

  Seegurke13\WebSocketBundle\Service\ConnectionArgumentResolver:
    tags:
      - 'websocket.argument_resolver'

  Seegurke13\WebSocketBundle\Service\ActionArgumentResolver:
    tags:
      - 'websocket.argument_resolver'

  React\EventLoop\LoopInterface:
    factory: 'React\EventLoop\Factory::create'

  React\Socket\ServerInterface:
    factory: 'Seegurke13\WebSocketBundle\Factory\SocketFactory::create'
    arguments:
      - '127.0.0.1'
      - 8080
      - '@React\EventLoop\LoopInterface'

  Ratchet\Server\IoServer:
    arguments:
      - '@Ratchet\Http\HttpServer'
      - '@React\Socket\ServerInterface'
      - '@React\EventLoop\LoopInterface'

  Ratchet\Http\HttpServer:
    arguments:
      - '@Ratchet\WebSocket\WsServer'

  Ratchet\WebSocket\WsServer:
    arguments:
      - '@Seegurke13\WebSocketBundle\Service\WsKernel'
